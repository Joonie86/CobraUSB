CC		:= ppu-gcc
CXX		:= ppu-g++
LD		:= ppu-ld 
OBJCOPY		:= ppu-objcopy
OBJDUMP		:= ppu-objdump
AR 		:= ppu-ar
STRIP		:= ppu-strip
INCLUDE		= ../common ../../ps2emu/include ../../lv1/include ../../debug/include
LIBSDIR         =
LIBS            =
CIPHER		= ../stage1.5_cipher/st15cipher

CFLAGS += -ffunction-sections -fdata-sections -Os -m64 -fno-builtin -fsigned-char -fno-exceptions \
			   -Os -Wall -Wno-strict-aliasing $(foreach dir,$(INCLUDE),-I$(dir)) \
			   -DPS2EMU -DFIRMWARE_3_55 -ffreestanding 
CFLAGS += --std=gnu99

ifeq ($(BUILD_TYPE), debug)
CFLAGS += -DDEBUG
endif


LDFLAGS= -T $(LDSCRIPT) -nostartfiles -nostdlib -nodefaultlibs -Wl,-static -Wl,-s -L. $(foreach dir,$(LIBSDIR),-L$(dir)) $(LIBS) \
	-Wl,--gc-sections -Wl,-Map=$(TARGET).map

OBJS = start.o vm.o ../../ps2emu/src/libc.o ../../ps2emu/src/libc_c.o ../../ps2emu/src/memory.o

ifeq ($(BUILD_TYPE), debug)
OBJS += ../../lv1/src/hvcall.o ../../lv1/src/device.o ../../debug/src/debug.o ../../debug/src/printf.o 
endif

all: $(TARGET).bin

objdump: $(TARGET).bin
	$(OBJDUMP) -D -EB -b binary -m powerpc:common64 $(TARGET).bin

%.bin: %.elf
	$(OBJCOPY) -O binary $< $@
	$(CIPHER) $@ $(KEYS) $(HASH_KEYS) $(TARGET).xtea $(SECTION1_SIZE) $(SECTION2_ADDR)
	cp $(TARGET).xtea /media/KINGSTON/s2.bin
	
$(TARGET).elf: $(OBJS) $(LDSCRIPT)
	$(CC) $(LDFLAGS) -o $@ $(OBJS)

%.o: %.S
	$(CC) $(CFLAGS) -c -o $@ $<

%.o: %.c
	$(CC) $(CFLAGS) -c -o $@ $<

clean:
	rm -f *.o *.elf *.bin *.map ../../ps2emu/src/*.o ../../lv1/src/*.o ../../debug/src/*.o
